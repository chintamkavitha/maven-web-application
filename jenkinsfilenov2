node {
    def mavenHome = tool name: "maven_3.8.6"
   
    echo "Build number: ${env.BUILD_NUMBER}"
   // echo "Job name is: ${env.JOB_NAME}"
    echo "Node name is: ${env.NODE_NAME}"
    
properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
 try{
sendslacknotifications("STARTED")
stage('CheckoutCode'){
   git branch: 'development', credentialsId: '4929d3b5-06b8-409e-8a45-080e4f9c633c', url: 'https://github.com/chintamkavitha/maven-web-application.git' 
   }
   stage('Build'){
    sh"${mavenHome}/bin/mvn clean package"
    }
    stage('ExecuteSonarQubeReport'){
        sh"${mavenHome}/bin/mvn sonar:sonar"
    }
    stage('UploadArtifactsToNexus'){
        sh"${mavenHome}/bin/mvn deploy"
    }
    stage('DeployAppIntoTomcatserver'){
        sshagent(['a5799c6c-0a8d-4540-a510-3aa3108d2ee3']) {
        sh"scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.12.110:/opt/apache-tomcat-9.0.68/webapps/"
            } 
            } 
} //try ended
catch(e){
currentBuild.result = "FAILURE"
}//catch block closing
finally{
sendslacknotifications(currentBuild.result)
}//finally closing
} //node closing
def sendslacknotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'
  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }
    slackSend (color: colorCode, message: summary, channel: "#jenkinsnotifications")
}


